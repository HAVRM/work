*構築するシステム
テキストエディターでC/C++のソースコードを書き、[[make]]を使ってコンパイル、[[HIDaspx::http://www-ice.yamagata-cit.ac.jp/ken/senshu/sitedev/index.php?AVR%2FHIDaspx]]を用いてマイコンに転送する。この方法なのはWindowsで[[AtmelStudio::http://www.atmel.com/ja/jp/tools/ATMELSTUDIO.aspx]]とHIDaspxを用いてAVRの開発を行っていたため。この方法はAtmega88PA-PUとAtmega328P-PUでは確認した。他のAVRマイコンでも可能なはずである。また転送装置として[[AVRISP mkⅡ::http://akizukidenshi.com/catalog/g/gM-02582/]]も使えるようにしているが、持っていないため未確認である。

*参考サイト
[[RAINさんのブログ]]
[[hamachanさんのブログ]]

*環境構築
説明は省きます。使用環境は[[Ubuntu]]を確認してください。

まず[[千秋ゼミさんのダウンロードページ::http://www-ice.yamagata-cit.ac.jp/ken/senshu/sitedev/index.php?AVR%2FHIDaspx_news02#o2ec2e47]]からhidspxのUbuntu用(約50KB)をダウンロードして展開してホームディレクトリにコピーしておく。以下のコマンドを実行。

$ sudo apt-get install gcc-avr binutils-avr avr-libc avrdude libusb-dev
$ cd ~/hidspx-2014-0306/src
(注)ここで'hidspx-2014-0306'はインストールしてコピーしたファイル名を選択
$ make
$ make sudo install

これでインストールは終了。これからmakeを行うためのMkeFileを作成する。下のMakeFileファイル(約500B)をダウンロードする。中のコードは[[MakeFile for AVR on Ubutnu]]に記載
&ref('MakeFile.tar.gz')
中にあるMakeFileをコンパイルしたいソースファイルがあるディレクトリにコピーする。このファイルのうち変更する点は次のところである。

PROG = (コンパイルしたいソースファイル名、main関数があるもの、拡張子は書かない)
MMCU = (ターゲットの名前、下を参考)
CPUFREQ = (クロック数、1MHz=1000000以外に設定したことはない、他でもできるはず)
TARGET =　(ターゲットの名前、下を参考)

ターゲットと各値の関係
  名前    :   MMCU     : TARGET
Atmega88  : atmega88p  :  m88p
Atmega328 : atmega328p :  m328p

これに沿って変更すれば良い。
このMakeFileには様々なオプションが付いている。以下がその表である

$ make               前回作成した実行ファイル等を削除してコンパイル
$ make w             コンパイルしたファイルをHIDaspxを用いて転送する
$ make write         コンパイルして転送する
$ make r             HIDaspxを用いて接続先のマイコンのデータを確認する。
$ make wmk           コンパイルしたファイルをAVRISP mkⅡを使って転送する
$ make clean         ディレクトリー内にある o ihex 一時・実行ファイルを削除する。
(注)make clean は make, make write でコンパイルする前に実行されている。

*プログラム
[[Atmega]]の項を参照。CでもC++でも問題なく両方makeでコンパイルできる。他のファイル(ヘッダやソースファイル等)を参照したいときはプログラム中で#includeで参照すれば良い。
